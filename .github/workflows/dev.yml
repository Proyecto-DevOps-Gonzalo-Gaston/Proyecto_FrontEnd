name: Build, Test, and Deploy

on:
  push:
    branches:
      - Develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Build the app
        run: npm run build

      - name: Verify build directory contents
        run: |
          ls -l dist/apps/catalog

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: dist/apps/catalog

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: dist/apps/catalog 

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Create S3 Bucket
        run: |
          aws s3api create-bucket --bucket ${{ secrets.S3_ORIGIN_BUCKET_DEV }} --region us-east-1 --create-bucket-configuration LocationConstraint=us-east-1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_DEFAULT_REGION: us-east-1

      - name: Configure Static Website Hosting
        run: |
          aws s3 website s3://${{ secrets.S3_ORIGIN_BUCKET_DEV }} --index-document index.html --error-document error.html

      - name: Configure Public Access Block
        run: |
          aws s3api put-public-access-block --bucket ${{ secrets.S3_ORIGIN_BUCKET_DEV }} --public-access-block-configuration "BlockPublicAcls=false,IgnorePublicAcls=false,BlockPublicPolicy=false,RestrictPublicBuckets=false"

      - name: Configure Bucket Policy
        run: |
          cat <<EOF > policy.json
          {
            "Version": "2012-10-17",
            "Id": "PutObjPolicy",
            "Statement": [
              {
                "Sid": "DenyObjectsThatAreNotSSEKMS",
                "Effect": "Deny",
                "Principal": "*",
                "Action": "s3:PutObject",
                "Resource": [
                  "arn:aws:s3:::${{ secrets.S3_ORIGIN_BUCKET_DEV }}/*"
                ],
                "Condition": {
                  "Null": {
                    "s3:x-amz-server-side-encryption-aws-kms-key-id": "true"
                  }
                }
              }
            ]
          }
          EOF
          aws s3api put-bucket-policy --bucket ${{ secrets.S3_ORIGIN_BUCKET_DEV }} --policy file://policy.json

      - name: Deploy to S3
        run: |
          aws s3 sync dist/apps/catalog s3://${{ secrets.S3_ORIGIN_BUCKET_DEV }} --delete